---
title: "Hello, my name is Benjamin W. Tjepkes"
subtitle: "Wildlife ecologist and budding geographer with a passion for conservation science."
toc: false
page-layout: article
about:
  id: about-id
  template: solana
  image: img-ben-portrait-2.jpg
  image-shape: rectangle
  links:
    - icon: twitter
      text: Twitter
      href: https://twitter.com/BTjepkes
    - icon: github
      text: Github
      href: https://github.com/btjepkes
    - icon: instagram
      text: Instagram
      href: https://instagram.com/ben.tjepkes
    - icon: linkedin
      text: LinkedIn
      href: https://www.linkedin.com/in/benjamintjepkes/
    - icon: link-45deg
      text: ORCID iD
      href: https://orcid.org/0009-0002-5524-2675
listing:
  id: site-listings
  contents:
    - "about.qmd"    
    - "posts.qmd"
    - "gallery.qmd"
    - "research.qmd"
    - "resources.qmd" 
    - "contact.qmd"  
  type: grid
  fields: 
    - title
    - subtitle
---

::: {.centered}
Welcome! This is my **professional portfolio** and **technical blog** site showcasing my work in ecology and geospatial. Thank you for stopping by to check out my projects and posts.
:::


::: {#about-id}

<span style="color: #f55c5c; font-size: 20px; font-weight: 600;">My Biography</span> --- I am a dedicated **wildlife ecologist** and **geospatial practitioner** interested in advancing the science behind natural resource conservation. My work focuses on using data science and geospatial techniques to research and inform **landscape** and **endangered resource conservation**. In my current role, I serve as the Assistant Wildlife Diversity Coordinator for the Missouri Department of Conservation. Peruse this site or my [CV](about.qmd) to learn more about my work.

:::


::: {#site-listings}

:::



```{r}
#| echo: false
#| warning: false

# Load the required libraries
library(gt)
library(gtExtras)
library(ggplot2)

# Create a sample data frame
data <- data.frame(
  C1 = c("Cartographic Design",
           "Data Viz",
            "Data Viz",
           "Web Development",
           "Data Management",
           "Project Management",
         "Field Techniques",
         "Research Methods"),
  C2 = c("Adept as using R, ArcGIS Pro, and ArcGIS Online to create static and dynamic maps and mapping applications.",
                  "Proficient in data visualization and reproducible reporting using Quarto, R Markdown, and Jupyter Notebooks.",
         "Proficient in data visualization and reproducible reporting using Quarto, R Markdown, and Jupyter Notebooks.",
                  "Employ front-end web development languages such as HTML and CSS to design functional and beautiful websites.",
                  "Use programs like Microsoft Access and Microsoft SQL Server to manipulate and maintain high-quality data in relational databases.",
                  "Use tools like Microsoft Teams, SharePoint, and Lists to manage complex projects and collaborate with team members efficiently.",
         "Experience using radio telemetry, standardized field sampling, and wildlife capture and marking techniques to perofrm well in the field.",
         "Proficiency in the scientific method and strong research project development skills, enabling me to undertake investigations with a methodical and precise approach."),
  C3 = c(4,2,3,4,5,3,4,4),
  C4 = c("bar-chart","check","file-code","pie-chart","database","gear","binoculars","microscope")
)

# Create a gt table
tbl <- gt(data %>% select(C4, C2, C3))

# Set column labels
tbl <- tbl %>%
  
  gt_plt_bar_pct(column = C3, fill = "#f5c25c", background = "lightgray") %>% 
  
  tab_row_group(label = md("**Spatial Analysis & Cartographic Design**"), rows = 1, id = "gis") %>% 
  
    tab_row_group(label = md("**Data Visualization & Reporting**"), rows = 2:3, id = "data") %>% 
  
    tab_row_group(label = md("**Web Development**"), rows = 4, id = "web") %>% 
  
    tab_row_group(label = md("**Data Management**"), rows = 5, id = "data-mgmnt") %>% 
  
    tab_row_group(label = md("**Research Methods**"), rows = 7:8, id = "research") %>% 
  
  gt_fa_column(C4) %>% 
  
  cols_label(
    C2 = "Skill-Related Experiences",
    C3 = "My Relative Proficiency",
    C4 = "") %>% 
  
  cols_align(
    align = "center",
    columns = c(C4, C3)
  ) %>% 
  
  cols_width(
    C2 ~ pct(60),
    C3 ~ pct(22),
    C4 ~ pct(18)
  ) %>% 
  
  tab_header(
    title = md("**Continuously Improving My Multidisciplinary Skillset**")) %>% 
  
  tab_options(
    table.width = pct(100),
    heading.padding = px(30),
    heading.background.color = "#20595d",
    data_row.padding = px(16),
    data_row.padding.horizontal = px(14)
  ) %>% 
    tab_style(
    style = list(
      cell_fill(color = "#d8d8d8"),
      cell_text(size = "medium")
    ),
    locations = cells_row_groups(groups = c("gis", "data", "web", "data-mgmnt", "research"))
    )

# Print the table
tbl

```

```{r}
#| echo: false
#| warning: false
#| include: false
#| eval: false


# libraries:
library(ggplot2)
library(gganimate)
library(ggthemes)
 
# Make 2 basic states and concatenate them:
a <- data.frame(group=c("Arcade","Python","CSS","HTML","R","SQL"),
                values=c(0.2,0.2,0.2,0.2,0.2,0.2),
                frame=rep('a',6),
                Proficiency=c("GIS", "Data + GIS","Web", "Web", "Data + GIS","Data"))

b <- data.frame(group=c("Arcade","Python","CSS","HTML","R","SQL"),
                values=c(2,3,4,4,5,2),
                frame=rep('b',6),
                Proficiency=c("GIS", "Data + GIS","Web", "Web", "Data + GIS","Data"))

data <- rbind(a,b)  

color_pal <- c("Data" = "red", "Data + GIS" = "blue", "GIS" = "green", "Web Dev" = "pink")
 
# Make a ggplot, but add frame=year: one image per year
ggplot(data, aes(x=group, y=values, fill=Proficiency)) + 
  geom_bar(stat='identity') +
  labs(title = "Coding Language Skills",
       subtitle = "My Relative Proficiency",
       fill = NULL) +
  
  theme(plot.title = element_text(hjust = 0.5),
        plot.subtitle = element_text(hjust = 0.5)) +
  
  scale_fill_economist() +
  
  theme_wsj() +
  
  transition_states(
    frame,
    transition_length = 2,
    state_length = 0.01) +
  
  ease_aes('sine-in-out')
```

