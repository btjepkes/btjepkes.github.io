---
title: "Exploring Highcharter in R"
subtitle: "Interactive plots and maps using the Highcharter JS library."
date: "9/20/2023"
abstract: This post is pending.
categories:
  - visualization
  - R
image: bg-pine-blue.jpg
draft: TRUE
---

## Introduction

Based on the [highcharter R package](https://jkunst.com/highcharter/articles/maps.html).

## Scatterplot Example

```{r}
#| warning: false
#| message: false
#| code-fold: true
library(highcharter)

data(penguins, package = "palmerpenguins") 

hchart(
  penguins,
  "scatter",
  hcaes(x = flipper_length_mm, y = bill_length_mm, group = species)
) %>% 
  hc_add_theme(hc_theme_538())
```


## Map Example

```{r}
#| warning: false
#| message: false
library(highcharter)
library(tidyverse)
data <- tibble(
  country = 
    c("PT", "IE", "GB", "IS",
      
      "NO", "SE", "DK", "DE", "NL", "BE", "LU", "ES", "FR", "PL", "CZ", "AT",
      "CH", "LI", "SK", "HU", "SI", "IT", "SM", "HR", "BA", "YF", "ME", "AL", "MK",
      
      "FI", "EE", "LV", "LT", "BY", "UA", "MD", "RO", "BG", "GR", "TR", "CY",
      
      "RU"),  
  tz = c(rep("UTC", 4), rep("UTC + 1",25), rep("UCT + 2",12), "UTC + 3")
  )

# auxiliar variable
data <- data |> 
  mutate(value = cumsum(!duplicated(tz)))


# now we'll create the dataClasses
dta_clss <- data |> 
  mutate(value = cumsum(!duplicated(tz))) |> 
  group_by(tz) |> 
  summarise(value = unique(value)) |> 
  arrange(value) |> 
  rename(name = tz, from = value) |> 
  mutate(to = from + 1) |> 
  list_parse()

hcmap(
  map = "custom/europe",
  data = data, 
  joinBy = c("iso-a2","country"),
  name = "Time zone",
  value = "value",
  tooltip = list(pointFormat = "{point.name} {point.tz}"),
  dataLabels = list(enabled = TRUE, format = "{point.country}")
  ) |>
  hc_colorAxis(
    dataClassColor = "category",
    dataClasses = dta_clss
    ) |> 
  hc_title(text = "Europe Time Zones")

```


