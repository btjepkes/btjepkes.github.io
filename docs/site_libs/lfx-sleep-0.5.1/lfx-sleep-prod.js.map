{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/leaflet-sleep/Leaflet.Sleep.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","L","Control","SleepMapControl","extend","initialize","opts","setOptions","this","options","position","prompt","styles","backgroundColor","padding","border","buildContainer","self","container","DomUtil","create","boundEvent","_nonBoundEvent","bind","appendChild","document","createTextNode","DomEvent","addListener","keys","map","key","style","_container","onAdd","e","stop","_map","sleep","_sleepMap","sleepMapControl","Map","mergeOptions","sleepTime","wakeTime","wakeMessageTouch","sleepNote","hoverToWake","sleepOpacity","sleepButton","Sleep","Handler","addHooks","_enterTimeout","_exitTimeout","_sleepButton","tap","addControl","mapStyle","WebkitTransition","MozTransition","_setSleepNoteStyle","removeHooks","scrollWheelZoom","enabled","enable","setOpacity","_removeSleepingListeners","_removeAwakeListeners","noteString","wakeMessage","pointerEvents","maxWidth","transitionDuration","zIndex","opacity","margin","textAlign","borderRadius","top","background","sleepNoteStyle","noteStyleOverrides","_wakeMap","_stopWaiting","touchZoom","dragging","_addAwakeListeners","disable","removeControl","_addSleepingListeners","_wakePending","once","setTimeout","off","_sleepPending","clearTimeout","addInitHook"],"mappings":"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","file":"lfx-sleep-prod.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/*\n * Leaflet.Sleep\n */\n\n/*\n * Default Button (touch devices only)\n */\n\nL.Control.SleepMapControl = L.Control.extend({\n\n  initialize: function(opts){\n    L.setOptions(this,opts);\n  },\n\n  options: {\n    position: 'topright',\n    prompt: 'disable map',\n    styles: {\n      'backgroundColor': 'white',\n      'padding': '5px',\n      'border': '2px solid gray'\n    }\n  },\n\n  buildContainer: function(){\n    var self = this;\n    var container = L.DomUtil.create('p', 'sleep-button');\n    var boundEvent = this._nonBoundEvent.bind(this);\n    container.appendChild( document.createTextNode( this.options.prompt ));\n    L.DomEvent.addListener(container, 'click', boundEvent);\n    L.DomEvent.addListener(container, 'touchstart', boundEvent);\n\n    Object.keys(this.options.styles).map(function(key) {\n      container.style[key] = self.options.styles[key];\n    });\n\n    return (this._container = container);\n  },\n\n  onAdd: function () {\n    return this._container || this.buildContainer();\n  },\n\n  _nonBoundEvent: function(e) {\n    L.DomEvent.stop(e);\n    if (this._map) this._map.sleep._sleepMap();\n    return false;\n  }\n\n});\n\nL.Control.sleepMapControl = function(){\n  return new L.Control.SleepMapControl();\n};\n\n\n/*\n * The Sleep Handler\n */\n\nL.Map.mergeOptions({\n  sleep: true,\n  sleepTime: 750,\n  wakeTime: 750,\n  wakeMessageTouch: 'Touch to Wake',\n  sleepNote: true,\n  hoverToWake: true,\n  sleepOpacity:.7,\n  sleepButton: L.Control.sleepMapControl\n});\n\nL.Map.Sleep = L.Handler.extend({\n\n  addHooks: function () {\n    var self = this;\n    this.sleepNote = L.DomUtil.create('p', 'sleep-note', this._map._container);\n    this._enterTimeout = null;\n    this._exitTimeout = null;\n\n    /*\n     * If the device has only a touchscreen we will never get\n     * a mouseout event, so we add an extra button to put the map\n     * back to sleep manually.\n     *\n     * a custom control/button can be provided by the user\n     * with the map's `sleepButton` option\n     */\n    this._sleepButton = this._map.options.sleepButton();\n\n    if (this._map.tap) {\n      this._map.addControl(this._sleepButton);\n    }\n\n    var mapStyle = this._map._container.style;\n    mapStyle.WebkitTransition += 'opacity .5s';\n    mapStyle.MozTransition += 'opacity .5s';\n\n    this._setSleepNoteStyle();\n    this._sleepMap();\n  },\n\n  removeHooks: function () {\n    if (!this._map.scrollWheelZoom.enabled()){\n      this._map.scrollWheelZoom.enable();\n    }\n    L.DomUtil.setOpacity( this._map._container, 1);\n    L.DomUtil.setOpacity( this.sleepNote, 0);\n    this._removeSleepingListeners();\n    this._removeAwakeListeners();\n  },\n\n  _setSleepNoteStyle: function() {\n    var noteString = '';\n    var style = this.sleepNote.style;\n\n    if(this._map.tap) {\n      noteString = this._map.options.wakeMessageTouch;\n    } else if (this._map.options.wakeMessage) {\n      noteString = this._map.options.wakeMessage;\n    } else if (this._map.options.hoverToWake) {\n      noteString = 'click or hover to wake';\n    } else {\n      noteString = 'click to wake';\n    }\n\n    if( this._map.options.sleepNote ){\n      this.sleepNote.appendChild(document.createTextNode( noteString ));\n      style.pointerEvents = 'none';\n      style.maxWidth = '150px';\n      style.transitionDuration = '.2s';\n      style.zIndex = 5000;\n      style.opacity = '.6';\n      style.margin = 'auto';\n      style.textAlign = 'center';\n      style.borderRadius = '4px';\n      style.top = '50%';\n      style.position = 'relative';\n      style.padding = '5px';\n      style.border = 'solid 2px black';\n      style.background = 'white';\n\n      if(this._map.options.sleepNoteStyle) {\n        var noteStyleOverrides = this._map.options.sleepNoteStyle;\n        Object.keys(noteStyleOverrides).map(function(key) {\n          style[key] = noteStyleOverrides[key];\n        });\n      }\n    }\n  },\n\n  _wakeMap: function (e) {\n    this._stopWaiting();\n    this._map.scrollWheelZoom.enable();\n    if (this._map.tap) {\n      this._map.touchZoom.enable();\n      this._map.dragging.enable();\n      this._map.tap.enable();\n      this._map.addControl(this._sleepButton);\n    }\n    L.DomUtil.setOpacity( this._map._container, 1);\n    this.sleepNote.style.opacity = 0;\n    this._addAwakeListeners();\n  },\n\n  _sleepMap: function () {\n    this._stopWaiting();\n    this._map.scrollWheelZoom.disable();\n\n    if (this._map.tap) {\n      this._map.touchZoom.disable();\n      this._map.dragging.disable();\n      this._map.tap.disable();\n      this._map.removeControl(this._sleepButton);\n    }\n\n    L.DomUtil.setOpacity( this._map._container, this._map.options.sleepOpacity);\n    this.sleepNote.style.opacity = .4;\n    this._addSleepingListeners();\n  },\n\n  _wakePending: function () {\n    this._map.once('mousedown', this._wakeMap, this);\n    if (this._map.options.hoverToWake){\n      var self = this;\n      this._map.once('mouseout', this._sleepMap, this);\n      self._enterTimeout = setTimeout(function(){\n          self._map.off('mouseout', self._sleepMap, self);\n          self._wakeMap();\n      } , self._map.options.wakeTime);\n    }\n  },\n\n  _sleepPending: function () {\n    var self = this;\n    self._map.once('mouseover', self._wakeMap, self);\n    self._exitTimeout = setTimeout(function(){\n        self._map.off('mouseover', self._wakeMap, self);\n        self._sleepMap();\n    } , self._map.options.sleepTime);\n  },\n\n  _addSleepingListeners: function(){\n    this._map.once('mouseover', this._wakePending, this);\n    this._map.tap &&\n      this._map.once('click', this._wakeMap, this);\n  },\n\n  _addAwakeListeners: function(){\n    this._map.once('mouseout', this._sleepPending, this);\n  },\n\n  _removeSleepingListeners: function(){\n    this._map.options.hoverToWake &&\n      this._map.off('mouseover', this._wakePending, this);\n    this._map.off('mousedown', this._wakeMap, this);\n    this._map.tap &&\n      this._map.off('click', this._wakeMap, this);\n  },\n\n  _removeAwakeListeners: function(){\n    this._map.off('mouseout', this._sleepPending, this);\n  },\n\n  _stopWaiting: function () {\n    this._removeSleepingListeners();\n    this._removeAwakeListeners();\n    var self = this;\n    if(this._enterTimeout) clearTimeout(self._enterTimeout);\n    if(this._exitTimeout) clearTimeout(self._exitTimeout);\n    this._enterTimeout = null;\n    this._exitTimeout = null;\n  }\n});\n\nL.Map.addInitHook('addHandler', 'sleep', L.Map.Sleep);\n"],"sourceRoot":""}